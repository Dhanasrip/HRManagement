package com.excelr.controller;

import com.excelr.exception.ResourceNotFoundException;
import com.excelr.model.Employee;
import com.excelr.model.Leave;
import com.excelr.repo.EmployeeRepository;
import com.excelr.service.LeaveService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/leaves")
public class LeaveController {

    @Autowired
    private LeaveService leaveService;
    
    @Autowired
    private EmployeeRepository employeeRepository;

    @PostMapping
    public ResponseEntity<Leave> applyLeave(@RequestBody LeaveRequestDTO leaveRequest) {
        Employee employee = employeeRepository.findById(leaveRequest.getEmployeeId())
            .orElseThrow(() -> new ResourceNotFoundException(
                "Employee not found with id: " + leaveRequest.getEmployeeId()));
                
        Leave leave = new Leave();
        leave.setEmployee(employee);
        leave.setStartDate(leaveRequest.getStartDate());
        leave.setEndDate(leaveRequest.getEndDate());
        leave.setReason(leaveRequest.getReason());
        
        return ResponseEntity.ok(leaveService.applyLeave(leave));
    }
    @GetMapping("/employee/{employeeId}")
    public ResponseEntity<List<Leave>> getLeavesByEmployee(@PathVariable Long employeeId) {
        return ResponseEntity.ok(leaveService.getLeavesByEmployeeId(employeeId));
    }

    @PutMapping("/{id}/approve")
    public ResponseEntity<Leave> approveLeave(@PathVariable Long id) {
        return ResponseEntity.ok(leaveService.approveLeave(id));
    }

    @PutMapping("/{id}/reject")
    public ResponseEntity<Leave> rejectLeave(@PathVariable Long id) {
        return ResponseEntity.ok(leaveService.rejectLeave(id));
    }

    @GetMapping("/employee/{employeeId}/balance")
    public ResponseEntity<Long> getLeaveBalance(
            @PathVariable Long employeeId,
            @RequestParam int year) {
        return ResponseEntity.ok(leaveService.getLeaveDaysUsed(employeeId, year));
    }
}